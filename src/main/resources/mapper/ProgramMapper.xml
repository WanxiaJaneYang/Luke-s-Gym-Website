<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lukefitness.lukegymbackend.dao.ProgramDao">
  <resultMap id="BaseResultMap" type="com.lukefitness.lukegymbackend.models.Program">
    <id column="program_id" jdbcType="INTEGER" property="programId" />
    <result column="card_id" jdbcType="INTEGER" property="cardId" />
    <result column="attendance" jdbcType="BIT" property="attendance" />
    <result column="feedback_given" jdbcType="BIT" property="feedbackGiven" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="trainee_id" jdbcType="INTEGER" property="traineeId" />
    <result column="trainer_id" jdbcType="INTEGER" property="trainerId" />
    <result column="session_focus1" jdbcType="VARCHAR" property="sessionFocus1" />
    <result column="session_focus2" jdbcType="VARCHAR" property="sessionFocus2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    program_id, card_id, attendance, feedback_given, start_date, end_date, status, trainee_id, 
    trainer_id, session_focus1, session_focus2
  </sql>
  <select id="selectByExample" parameterType="com.lukefitness.lukegymbackend.models.ProgramExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from program
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from program
    where program_id = #{programId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from program
    where program_id = #{programId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lukefitness.lukegymbackend.models.ProgramExample">
    delete from program
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lukefitness.lukegymbackend.models.Program">
    insert into program (program_id, card_id, attendance, 
      feedback_given, start_date, end_date, 
      status, trainee_id, trainer_id, 
      session_focus1, session_focus2)
    values (#{programId,jdbcType=INTEGER}, #{cardId,jdbcType=INTEGER}, #{attendance,jdbcType=BIT}, 
      #{feedbackGiven,jdbcType=BIT}, #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=CHAR}, #{traineeId,jdbcType=INTEGER}, #{trainerId,jdbcType=INTEGER}, 
      #{sessionFocus1,jdbcType=VARCHAR}, #{sessionFocus2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lukefitness.lukegymbackend.models.Program" useGeneratedKeys="true" keyProperty="programId">
    insert into program
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="programId != null">
        program_id,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="attendance != null">
        attendance,
      </if>
      <if test="feedbackGiven != null">
        feedback_given,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="traineeId != null">
        trainee_id,
      </if>
      <if test="trainerId != null">
        trainer_id,
      </if>
      <if test="sessionFocus1 != null">
        session_focus1,
      </if>
      <if test="sessionFocus2 != null">
        session_focus2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="programId != null">
        #{programId,jdbcType=INTEGER},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=INTEGER},
      </if>
      <if test="attendance != null">
        #{attendance,jdbcType=BIT},
      </if>
      <if test="feedbackGiven != null">
        #{feedbackGiven,jdbcType=BIT},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="traineeId != null">
        #{traineeId,jdbcType=INTEGER},
      </if>
      <if test="trainerId != null">
        #{trainerId,jdbcType=INTEGER},
      </if>
      <if test="sessionFocus1 != null">
        #{sessionFocus1,jdbcType=VARCHAR},
      </if>
      <if test="sessionFocus2 != null">
        #{sessionFocus2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lukefitness.lukegymbackend.models.ProgramExample" resultType="java.lang.Long">
    select count(*) from program
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update program
    <set>
      <if test="row.programId != null">
        program_id = #{row.programId,jdbcType=INTEGER},
      </if>
      <if test="row.cardId != null">
        card_id = #{row.cardId,jdbcType=INTEGER},
      </if>
      <if test="row.attendance != null">
        attendance = #{row.attendance,jdbcType=BIT},
      </if>
      <if test="row.feedbackGiven != null">
        feedback_given = #{row.feedbackGiven,jdbcType=BIT},
      </if>
      <if test="row.startDate != null">
        start_date = #{row.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.endDate != null">
        end_date = #{row.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.status != null">
        status = #{row.status,jdbcType=CHAR},
      </if>
      <if test="row.traineeId != null">
        trainee_id = #{row.traineeId,jdbcType=INTEGER},
      </if>
      <if test="row.trainerId != null">
        trainer_id = #{row.trainerId,jdbcType=INTEGER},
      </if>
      <if test="row.sessionFocus1 != null">
        session_focus1 = #{row.sessionFocus1,jdbcType=VARCHAR},
      </if>
      <if test="row.sessionFocus2 != null">
        session_focus2 = #{row.sessionFocus2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update program
    set program_id = #{row.programId,jdbcType=INTEGER},
      card_id = #{row.cardId,jdbcType=INTEGER},
      attendance = #{row.attendance,jdbcType=BIT},
      feedback_given = #{row.feedbackGiven,jdbcType=BIT},
      start_date = #{row.startDate,jdbcType=TIMESTAMP},
      end_date = #{row.endDate,jdbcType=TIMESTAMP},
      status = #{row.status,jdbcType=CHAR},
      trainee_id = #{row.traineeId,jdbcType=INTEGER},
      trainer_id = #{row.trainerId,jdbcType=INTEGER},
      session_focus1 = #{row.sessionFocus1,jdbcType=VARCHAR},
      session_focus2 = #{row.sessionFocus2,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lukefitness.lukegymbackend.models.Program">
    update program
    <set>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=INTEGER},
      </if>
      <if test="attendance != null">
        attendance = #{attendance,jdbcType=BIT},
      </if>
      <if test="feedbackGiven != null">
        feedback_given = #{feedbackGiven,jdbcType=BIT},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="traineeId != null">
        trainee_id = #{traineeId,jdbcType=INTEGER},
      </if>
      <if test="trainerId != null">
        trainer_id = #{trainerId,jdbcType=INTEGER},
      </if>
      <if test="sessionFocus1 != null">
        session_focus1 = #{sessionFocus1,jdbcType=VARCHAR},
      </if>
      <if test="sessionFocus2 != null">
        session_focus2 = #{sessionFocus2,jdbcType=VARCHAR},
      </if>
    </set>
    where program_id = #{programId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lukefitness.lukegymbackend.models.Program">
    update program
    set card_id = #{cardId,jdbcType=INTEGER},
      attendance = #{attendance,jdbcType=BIT},
      feedback_given = #{feedbackGiven,jdbcType=BIT},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=CHAR},
      trainee_id = #{traineeId,jdbcType=INTEGER},
      trainer_id = #{trainerId,jdbcType=INTEGER},
      session_focus1 = #{sessionFocus1,jdbcType=VARCHAR},
      session_focus2 = #{sessionFocus2,jdbcType=VARCHAR}
    where program_id = #{programId,jdbcType=INTEGER}
  </update>
</mapper>